class Solution {
public:
    Node* connect(Node* root) {
        if(!root)return root;
        queue<Node*> q;
        q.push(root);
        while(!q.empty()){
            int n=q.size();
            for(int i=0;i<n;i++){
                Node* x=q.front();
                q.pop();
                if(i!=n-1)x->next=q.front();
                if(x->left)q.push(x->left);
                if(x->right)q.push(x->right);
            }
        }
        return root;
    }
};



//a good solution

// //void connect(TreeLinkNode *root) {
//     if(!root)
//         return;
//     while(root -> left)
//     {
//         TreeLinkNode *p = root;
//         while(p)
//         {
//             p -> left -> next = p -> right;
//             if(p -> next)
//                 p -> right -> next = p -> next -> left;
//             p = p -> next;
//         }
//         root = root -> left;
//     }
// }
